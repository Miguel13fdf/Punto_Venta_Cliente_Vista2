
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "peticiones", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Peticiones {


    /**
     * 
     * @param descripcion
     * @param tipo
     * @param idTipoPago
     * @return
     *     returns ws.TipoPago
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarTipoPago", targetNamespace = "http://ws/", className = "ws.RegistrarTipoPago")
    @ResponseWrapper(localName = "registrarTipoPagoResponse", targetNamespace = "http://ws/", className = "ws.RegistrarTipoPagoResponse")
    @Action(input = "http://ws/peticiones/registrarTipoPagoRequest", output = "http://ws/peticiones/registrarTipoPagoResponse")
    public TipoPago registrarTipoPago(
        @WebParam(name = "idTipoPago", targetNamespace = "")
        Integer idTipoPago,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion);

    /**
     * 
     * @param ruc
     * @param grupoClasificacion
     * @param idProveedor
     * @param correo
     * @param moneda
     * @param telefono
     * @param pais
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarProveedorYClasificacion", targetNamespace = "http://ws/", className = "ws.RegistrarProveedorYClasificacion")
    @ResponseWrapper(localName = "registrarProveedorYClasificacionResponse", targetNamespace = "http://ws/", className = "ws.RegistrarProveedorYClasificacionResponse")
    @Action(input = "http://ws/peticiones/registrarProveedorYClasificacionRequest", output = "http://ws/peticiones/registrarProveedorYClasificacionResponse")
    public String registrarProveedorYClasificacion(
        @WebParam(name = "idProveedor", targetNamespace = "")
        int idProveedor,
        @WebParam(name = "ruc", targetNamespace = "")
        String ruc,
        @WebParam(name = "telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "pais", targetNamespace = "")
        String pais,
        @WebParam(name = "correo", targetNamespace = "")
        String correo,
        @WebParam(name = "moneda", targetNamespace = "")
        String moneda,
        @WebParam(name = "grupoClasificacion", targetNamespace = "")
        String grupoClasificacion);

    /**
     * 
     * @param apellidoPersona
     * @param idRol
     * @param dniPersona
     * @param idUsuario
     * @param passwordUsuario
     * @param nombreRol
     * @param nombrePersona
     * @param nombreUsuario
     * @param celularPersona
     * @param estadoRol
     * @param idPersona
     * @param correoPersona
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarUsuarioPersonaRol", targetNamespace = "http://ws/", className = "ws.RegistrarUsuarioPersonaRol")
    @ResponseWrapper(localName = "registrarUsuarioPersonaRolResponse", targetNamespace = "http://ws/", className = "ws.RegistrarUsuarioPersonaRolResponse")
    @Action(input = "http://ws/peticiones/registrarUsuarioPersonaRolRequest", output = "http://ws/peticiones/registrarUsuarioPersonaRolResponse")
    public Boolean registrarUsuarioPersonaRol(
        @WebParam(name = "idUsuario", targetNamespace = "")
        int idUsuario,
        @WebParam(name = "idPersona", targetNamespace = "")
        int idPersona,
        @WebParam(name = "nombreUsuario", targetNamespace = "")
        String nombreUsuario,
        @WebParam(name = "passwordUsuario", targetNamespace = "")
        String passwordUsuario,
        @WebParam(name = "nombrePersona", targetNamespace = "")
        String nombrePersona,
        @WebParam(name = "apellidoPersona", targetNamespace = "")
        String apellidoPersona,
        @WebParam(name = "dniPersona", targetNamespace = "")
        String dniPersona,
        @WebParam(name = "celularPersona", targetNamespace = "")
        String celularPersona,
        @WebParam(name = "correoPersona", targetNamespace = "")
        String correoPersona,
        @WebParam(name = "idRol", targetNamespace = "")
        int idRol,
        @WebParam(name = "nombreRol", targetNamespace = "")
        String nombreRol,
        @WebParam(name = "estadoRol", targetNamespace = "")
        boolean estadoRol);

    /**
     * 
     * @param ruc
     * @param fecha
     * @param total
     * @param idTipoPago
     * @param descuento
     * @param idFactura
     * @param itemsFactura
     * @param idPersona
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarFacturaConItems", targetNamespace = "http://ws/", className = "ws.RegistrarFacturaConItems")
    @ResponseWrapper(localName = "registrarFacturaConItemsResponse", targetNamespace = "http://ws/", className = "ws.RegistrarFacturaConItemsResponse")
    @Action(input = "http://ws/peticiones/registrarFacturaConItemsRequest", output = "http://ws/peticiones/registrarFacturaConItemsResponse")
    public String registrarFacturaConItems(
        @WebParam(name = "idFactura", targetNamespace = "")
        Integer idFactura,
        @WebParam(name = "ruc", targetNamespace = "")
        String ruc,
        @WebParam(name = "idPersona", targetNamespace = "")
        Persona idPersona,
        @WebParam(name = "fecha", targetNamespace = "")
        String fecha,
        @WebParam(name = "idTipoPago", targetNamespace = "")
        TipoPago idTipoPago,
        @WebParam(name = "descuento", targetNamespace = "")
        Double descuento,
        @WebParam(name = "total", targetNamespace = "")
        Double total,
        @WebParam(name = "itemsFactura", targetNamespace = "")
        List<ItemFactura> itemsFactura);

    /**
     * 
     * @param idRol
     * @param grupoClasificacion
     * @param estadoCompetencia
     * @param nombreRol
     * @param nombreCompetencia
     * @param idClasificacion
     * @param estadoRol
     * @param idCompetencia
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarCompetenciaRol", targetNamespace = "http://ws/", className = "ws.RegistrarCompetenciaRol")
    @ResponseWrapper(localName = "registrarCompetenciaRolResponse", targetNamespace = "http://ws/", className = "ws.RegistrarCompetenciaRolResponse")
    @Action(input = "http://ws/peticiones/registrarCompetenciaRolRequest", output = "http://ws/peticiones/registrarCompetenciaRolResponse")
    public String registrarCompetenciaRol(
        @WebParam(name = "idRol", targetNamespace = "")
        int idRol,
        @WebParam(name = "nombreRol", targetNamespace = "")
        String nombreRol,
        @WebParam(name = "estadoRol", targetNamespace = "")
        boolean estadoRol,
        @WebParam(name = "idCompetencia", targetNamespace = "")
        int idCompetencia,
        @WebParam(name = "nombreCompetencia", targetNamespace = "")
        String nombreCompetencia,
        @WebParam(name = "estadoCompetencia", targetNamespace = "")
        boolean estadoCompetencia,
        @WebParam(name = "idClasificacion", targetNamespace = "")
        int idClasificacion,
        @WebParam(name = "grupoClasificacion", targetNamespace = "")
        String grupoClasificacion);

    /**
     * 
     * @param idProducto
     * @return
     *     returns ws.Producto
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarProductoPorId", targetNamespace = "http://ws/", className = "ws.BuscarProductoPorId")
    @ResponseWrapper(localName = "buscarProductoPorIdResponse", targetNamespace = "http://ws/", className = "ws.BuscarProductoPorIdResponse")
    @Action(input = "http://ws/peticiones/buscarProductoPorIdRequest", output = "http://ws/peticiones/buscarProductoPorIdResponse")
    public Producto buscarProductoPorId(
        @WebParam(name = "idProducto", targetNamespace = "")
        int idProducto);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://ws/", className = "ws.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://ws/", className = "ws.HelloResponse")
    @Action(input = "http://ws/peticiones/helloRequest", output = "http://ws/peticiones/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Rol>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarroles", targetNamespace = "http://ws/", className = "ws.Listarroles")
    @ResponseWrapper(localName = "listarrolesResponse", targetNamespace = "http://ws/", className = "ws.ListarrolesResponse")
    @Action(input = "http://ws/peticiones/listarrolesRequest", output = "http://ws/peticiones/listarrolesResponse")
    public List<Rol> listarroles();

    /**
     * 
     * @param idClasificacion
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarGrupoClasificacionPorID", targetNamespace = "http://ws/", className = "ws.BuscarGrupoClasificacionPorID")
    @ResponseWrapper(localName = "buscarGrupoClasificacionPorIDResponse", targetNamespace = "http://ws/", className = "ws.BuscarGrupoClasificacionPorIDResponse")
    @Action(input = "http://ws/peticiones/buscarGrupoClasificacionPorIDRequest", output = "http://ws/peticiones/buscarGrupoClasificacionPorIDResponse")
    public String buscarGrupoClasificacionPorID(
        @WebParam(name = "idClasificacion", targetNamespace = "")
        int idClasificacion);

    /**
     * 
     * @param idProveedor
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarRUCProveedorPorID", targetNamespace = "http://ws/", className = "ws.BuscarRUCProveedorPorID")
    @ResponseWrapper(localName = "buscarRUCProveedorPorIDResponse", targetNamespace = "http://ws/", className = "ws.BuscarRUCProveedorPorIDResponse")
    @Action(input = "http://ws/peticiones/buscarRUCProveedorPorIDRequest", output = "http://ws/peticiones/buscarRUCProveedorPorIDResponse")
    public String buscarRUCProveedorPorID(
        @WebParam(name = "idProveedor", targetNamespace = "")
        int idProveedor);

    /**
     * 
     * @param estado
     * @param rolnombre
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registrarrol", targetNamespace = "http://ws/", className = "ws.Registrarrol")
    @ResponseWrapper(localName = "registrarrolResponse", targetNamespace = "http://ws/", className = "ws.RegistrarrolResponse")
    @Action(input = "http://ws/peticiones/registrarrolRequest", output = "http://ws/peticiones/registrarrolResponse")
    public String registrarrol(
        @WebParam(name = "rolnombre", targetNamespace = "")
        String rolnombre,
        @WebParam(name = "estado", targetNamespace = "")
        boolean estado,
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param unidad
     * @param precioUnitario
     * @param foto
     * @param iva
     * @param idProveedor
     * @param idClasificacion
     * @param idProducto
     * @param stock
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "crearProducto", targetNamespace = "http://ws/", className = "ws.CrearProducto")
    @ResponseWrapper(localName = "crearProductoResponse", targetNamespace = "http://ws/", className = "ws.CrearProductoResponse")
    @Action(input = "http://ws/peticiones/crearProductoRequest", output = "http://ws/peticiones/crearProductoResponse")
    public boolean crearProducto(
        @WebParam(name = "idProducto", targetNamespace = "")
        int idProducto,
        @WebParam(name = "stock", targetNamespace = "")
        int stock,
        @WebParam(name = "precioUnitario", targetNamespace = "")
        double precioUnitario,
        @WebParam(name = "unidad", targetNamespace = "")
        String unidad,
        @WebParam(name = "idClasificacion", targetNamespace = "")
        Clasificacion idClasificacion,
        @WebParam(name = "idProveedor", targetNamespace = "")
        Proveedores idProveedor,
        @WebParam(name = "iva", targetNamespace = "")
        boolean iva,
        @WebParam(name = "foto", targetNamespace = "")
        String foto);

    /**
     * 
     * @param passwordUsuario
     * @param nombreUsuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loginUsuario", targetNamespace = "http://ws/", className = "ws.LoginUsuario")
    @ResponseWrapper(localName = "loginUsuarioResponse", targetNamespace = "http://ws/", className = "ws.LoginUsuarioResponse")
    @Action(input = "http://ws/peticiones/loginUsuarioRequest", output = "http://ws/peticiones/loginUsuarioResponse")
    public String loginUsuario(
        @WebParam(name = "nombreUsuario", targetNamespace = "")
        String nombreUsuario,
        @WebParam(name = "passwordUsuario", targetNamespace = "")
        String passwordUsuario);

    /**
     * 
     * @param nombre
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "siexisterol", targetNamespace = "http://ws/", className = "ws.Siexisterol")
    @ResponseWrapper(localName = "siexisterolResponse", targetNamespace = "http://ws/", className = "ws.SiexisterolResponse")
    @Action(input = "http://ws/peticiones/siexisterolRequest", output = "http://ws/peticiones/siexisterolResponse")
    public Boolean siexisterol(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param idcomp
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "siexisteComp", targetNamespace = "http://ws/", className = "ws.SiexisteComp")
    @ResponseWrapper(localName = "siexisteCompResponse", targetNamespace = "http://ws/", className = "ws.SiexisteCompResponse")
    @Action(input = "http://ws/peticiones/siexisteCompRequest", output = "http://ws/peticiones/siexisteCompResponse")
    public Boolean siexisteComp(
        @WebParam(name = "idcomp", targetNamespace = "")
        String idcomp);

    /**
     * 
     * @param dni
     * @return
     *     returns ws.Persona
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarP", targetNamespace = "http://ws/", className = "ws.BuscarP")
    @ResponseWrapper(localName = "buscarPResponse", targetNamespace = "http://ws/", className = "ws.BuscarPResponse")
    @Action(input = "http://ws/peticiones/buscarPRequest", output = "http://ws/peticiones/buscarPResponse")
    public Persona buscarP(
        @WebParam(name = "dni", targetNamespace = "")
        String dni);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Persona>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarPersonas", targetNamespace = "http://ws/", className = "ws.ListarPersonas")
    @ResponseWrapper(localName = "listarPersonasResponse", targetNamespace = "http://ws/", className = "ws.ListarPersonasResponse")
    @Action(input = "http://ws/peticiones/listarPersonasRequest", output = "http://ws/peticiones/listarPersonasResponse")
    public List<Persona> listarPersonas();

    /**
     * 
     * @return
     *     returns java.util.List<ws.Usuario>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarUsuarios", targetNamespace = "http://ws/", className = "ws.ListarUsuarios")
    @ResponseWrapper(localName = "listarUsuariosResponse", targetNamespace = "http://ws/", className = "ws.ListarUsuariosResponse")
    @Action(input = "http://ws/peticiones/listarUsuariosRequest", output = "http://ws/peticiones/listarUsuariosResponse")
    public List<Usuario> listarUsuarios();

    /**
     * 
     * @param dni
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarRuc", targetNamespace = "http://ws/", className = "ws.BuscarRuc")
    @ResponseWrapper(localName = "buscarRucResponse", targetNamespace = "http://ws/", className = "ws.BuscarRucResponse")
    @Action(input = "http://ws/peticiones/buscarRucRequest", output = "http://ws/peticiones/buscarRucResponse")
    public List<String> buscarRuc(
        @WebParam(name = "dni", targetNamespace = "")
        String dni);

}
